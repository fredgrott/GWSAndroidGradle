/*
 * Copyright (C) 2016 Fred Grott(aka shareme GrottWorkShop)
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under License.
 */
allprojects {
    //borrowed from Jake Wharton's gist
    //https://gist.github.com/JakeWharton/2066f5e4f08fbaaa68fd
    // ensures we do not ever use wildcards
    // if lib author has used + wildcard than its
    // resolutionStrategy.force "group:name:exact_version"
    afterEvaluate { project ->
        //noinspection GroovyAssignabilityCheck
        project.configurations.all {

            resolutionStrategy.eachDependency { DependencyResolveDetails details ->
                //noinspection GroovyAssignabilityCheck
                def requested = details.target
                if (requested.version.contains('+')) {
                    throw new GradleException("Wildcard dependency forbidden: ${requested.group}:${requested.name}:${requested.version}")
                }
            }

            //cannot do resolutionStrategy.force here, if needed do at the
            //individual module build.gradle levels

        }
    }
    repositories {
        jcenter()
        //for getting libs deployed to jitpack
        maven { url "https://jitpack.io" }
    }
    tasks.withType(JavaForkOptions) {
        // Forked processes like GradleWorkerMain for tests won't steal focus!
        jvmArgs '-Djava.awt.headless=true'
    }
    // for jdk8 to avoid the R.java errors
    if (JavaVersion.current().isJava8Compatible()){
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }

}

ext {

    androidSupportVersion = '23.1.1'

    multidexVersion = '1.0.1'

    /*
     * Usually the android support libs keep up with version changes as far
     * as their dependencies thus we usually do not need to resort ot
     * resolutionStrategies to adjust their dep versions.
     *
     * Still list deps here for our own information in debugging a complicated
     * build script.
     */
    androidSupportDependencies = [
            // appCompat: deps is support-v4
            appCompat: "com.android.support:appcompat-v7:$androidSupportVersion",
            // cardView: deps is none
            cardView: "com.android.support:cardview-v7:$androidSupportVersion",
            // customTabs: deps is support-annotations and support-v4
            customTabs: "com.android.support:customtabs:$androidSupportVersion",
            // design: deps is appcompat-v7 recyclerview-v7 and support-v4
            design: "com.android.support:design:$androidSupportVersion",
            // gridlayout: deps are support-v4
            gridLayout: "com.android.support:gridlayout-v7:$androidSupportVersion",
            // leanBack: deps are recyclerview-v7 and support-v4
            leanBack: "com.android.support:leanback-v17:$androidSupportVersion",
            // mediarouter: deps are appcompat-v7 and palette-v7
            mediaRouter: "com.android.support:mediarouter-v7:$androidSupportVersion",
            // multidex: desp are none
            multidex: "com.android.support:multidex:$multidexVersion",
            // multidexInstrumentation: deps are multidex
            multidexInstrumentation: "com.android.support:multidex-instrumentation:$multidexVersion",
            // palette: deps are support-v4
            palette: "com.android.support:palette-v7:$androidSupportVersion",
            // percent: deps are support-v4
            percent: "com.android.support:percent:$androidSupportVersion",
            // preferenceLeanback: desp are appcompat-v7 leanback-v17 recyclerview-v7 support-v4 preference-v7 and preference-v17
            preferenceLeanback: "com.android.support:preference-leanback-v17:$androidSupportVersion",
            // preference: deps are appcompat-v7 recyclerview-v7 and support-v4
            preference: "com.android.support:preference-v7:$androidSupportVersion",
            // preferenceFourteen: deps are appcompat-v7 recyclerview-v7 support-v4 preference-v7
            preferenceFourteen: "com.android.support:preference-v14:$androidSupportVersion",
            // recommendation: deps are support-v4
            recommendation: "com.android.support:recommendation:$androidSupportVersion",
            // recyclerview: deps are support-annotations and support-v4
            recyclerView: "com.android.support:recyclerview-v7:$androidSupportVersion",
            // supportAnnotations: deps are none
            supportAnnotations: "com.android.support:support-annotations:$androidSupportVersion",
            // supportFour: deps are support-annotations
            supportFour: "com.android.support:support-v4:$androidSupportVersion",
            // supportThirteen: deps are support-v4
            supportThirteen: "com.android.support:support-v13:$androidSupportVersion"

    ]

    junitVersion = '4.12'
    mockitoVersion = '1.10.19'
    assertjJunitVersion = '2.2.0'
    powerMockJunit4Version = '1.6.3'
    powerMockMockitoVersion = '1.6.3'

    tddDependencies = [
            junit:"junit:junit:$junitVersion",
            mockito:"org.mockito:mockito-all:$mockitoVersion",
            assertjJunitCore:"org.assertj:assertj-core:$assertjJunitVersion",
            powermockMockito:"org.powermock:powermock-api-mockito:$powerMockMockitoVersion",
            powermockJunit:"org.powermock:powermock-module-junit4:$powerMockJunit4Version"
    ]

    databindingVersion = '1.0-r5'

    // warning: library pulls baseLibrary but baseLibrary, compiler, dataBinder  is not in
    // m2repository as of yet and
    // library will also pull outdated version of support-v4 library
    // which you will have to force to updated version just like we did with
    // annotations in the module build scripts
    databindingDependencies = [
            databindingAdapters: "com.android.databinding:adapters:$databindingVersion",
            databingingLibrary: "com.android.databindging:library:$databindingVersion"
    ]

    espressoVersion = '2.2.1'
    espressoRulesVersion = '0.4.1'
    espressoRunnerVersion = '0.4.1'

    assertjVersion = '1.1.0'

    spoonClientVersion = '1.1.10'

    gwsdroidinsutilVersion = '1.0.0.4'

    /*
     * espresso libs usually are out of synch with rest of android support libs as far as
     * deb versions
     */
    instrumentedDependencies = [
            // espressoContrib: deps are espresso-core accessibility-test-framework support-v4 recyclerview-v7
            espressoContrib:"com.android.support.test.espresso:espresso-contrib:$espressoVersion",
            // espressoCore: deps javawriter runner rules javax-inject hamcrest-library hamcrest-integration jsr305 javax.annotation-api espresso-idling-resources
            espressoCore:"com.android.support.test.espresso:espresso-core:$espressoVersion",
            // espressoIdlingResources: deps are none
            espressoIdlingResource:"com.android.support.test.espresso:espresso-idling-resource:$espressoVersion",
            // espressoIntents: deps are espresso-core
            espressoIntents:"com.android.support.test.espresso:espresso-intents:$espressoVersion",
            // espressoWeb: deps are tagsoup espresso-core support-annotations
            espressoWeb:"com.android.support.test.espresso:espresso-web:$espressoVersion",
            // espressoRules: deps are runner
            espressoRules:"com.android.support.test:rules:$espressoRulesVersion",
            // espressoRunner: deps are exposed-instrumentatio-api support-annotations junit
            espressoRunner:"com.android.support.test:runner:$espressoRunnerVersion",
            // deps assertj-core and support-annoations
            assertjAndroid:"com.squareup.assertj:assertj-android:$assertjVersion",
            // deps are support-v4 and assertj-android
            assertjSupportFour:"com.squareup.assertj:assertj-android-support-v4:$assertjVersion",
            //deps are assertj-android and play-services
            assertjPlayServices:"com.squareup.assertj:assertj-android-play-services:$assertjVersion",
            //deps are appcompat-v7 and assertj-anroid
            assertjAppCompat:"com.squareup.assertj:assertj-android-appcompat-v7:$assertjVersion",
            //deps are assertj-android and design
            assertjDesign:"com.squareup.assertj:assertj-android-design:$assertjVersion",
            //deps are gridlayout-v7 and assertj-android
            assertjGridLayout:"com.squareup.assertj:assertj-android-gridlayout-v7:$assertjVersion",
            //deps are assertj-android and mediarouter-v7
            assertjMediarouter:"com.squareup.assertj:assertj-android-mediarouter-v7:$assertjVersion",
            //deps are assertj-android and palette-v7
            assertjPalette:"com.squareup.assertj:assertj-android-palette-v7:$assertjVersion",
            //deps assertj-android and recyclerview-v7
            assertjRecycler:"com.squareup.assertj:assertj-android-recyclerview-v7:$assertjVersion",
            //deps are assertj-android and cardview-v7
            assertjCard:"com.squareup.assertj:assertj-android-cardview-v7:$assertjVersion",
            spoonClient:"com.squareup.spoon:spoon-client:$spoonClientVersion",
            gwsdroidinsutil:"com.github.shareme:GWSDroidInsUtil:$gwsdroidinsutilVersion@aar"

    ]

    butterknifeVersion = '7.0.1'
    daggerVersion = '2.0.2'
    daggerproducersVersion = '2.0-beta'
    javaxinjectionVersion = '1'
    javaxannotationVersion = '1.0'

    injectDependencies = [
            butterKnife:"com.jakewharton:butterknife:$butterknifeVersion",
            //apt
            dagger:"com.google.dagger:dagger:$daggerVersion",
            //compile
            daggerCompiler:"com.google.dagger:dagger-compiler:$daggerVersion",
            //apt
            daggerProducers:"com.google.dagger:dagger-producers:$daggerproducersVersion",
            //compile
            javaxInject:"javax.inject:javax.inject:$javaxinjectionVersion",
            //provided
            javaxAnnotation:"javax.annotation:jsr250-api:$javaxannotationVersion"
    ]

    //lombok libs as we only use lombok on the app side not the library side at the
    //moment and that can change
    lombokVersion = '1.16.6'

    //remember that we need do a delombok task to adjust the javadocs and need the
    //lombok jar in folder other than libs os that its not picked-up as a compile dep.
    lombokDependencies = [
            //provided and apt both
            lombok:"org.projectlombok:lombok:$lombokVersion"
    ]



    picassoVersion = '2.5.2'

    imageDependencies = [
            picasso:"com.squareup.picasso:picasso:$picassoVersion"
    ]

    dbinspectorVersion = '3.2.1'

    databaseDebugDependencies = [
            dbinspector:"im.dino:dbinspector:$dbinspectorVersion@aar"
    ]

    leakCanaryVersion = '1.3.1'
    gwsdroidviewserverVersion = '1.0.0.1'
    gwswakeupVersion = '1.0.0.1'
    scalpelVersion = '1.1.2'
    madgeVersion = '1.1.2'

    appDebugDependencies = [
            leakCanaryDebugCompile:"com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion",
            leakCanaryReleaseCompile:"com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion",
            //debugCompile, gets BuildConfig wrapped as far as method calls
            gwsdroidviewserver:"com.github.shareme:GWSDroidViewServer:$gwsdroidviewserverVersion@aar",
            //debugCompile, gets BuildConfig wrapped as far as method calls
            gwswakeup:"com.github.shareme:GWSWakeUp:$gwswakeupVersion@aar",
            //debugCompile
            scalpel:"com.jakewharton.scalpel:scalpel:$scalpelVersion",
            //debugCompile
            madge: "com.jakewharton.madge:madge:$madgeVersion"

    ]

    ottoVerion = '1.3.8'
    gwsottoutilsVersion = '1.0.0.1'

    eventbusDependencies = [
            otto:"com.squareup:otto:$ottoVerion",
            gwsottoutils:"com.github.shareme:GWSOttoUtils:$gwsottoutilsVersion"
    ]

    timberVersion = '4.1.0'

    logDependencies = [
            timber:"com.jakewharton.timber:timber:$timberVersion"
    ]

    playservicesVersion = '8.4.0'
    supportwearableVersion= '1.3.0'
    wearableVerion = '1.0.0'

    playservicesDependencies = [
            playServices:"com.google.android.gms:play-services:$playservicesVersion",
            playServicesAds:"com.google.android.gms:play-services-ads:$playservicesVersion",
            playServicesAllWear:"com.google.android.gms:play-services-all-wear:$playservicesVersion",
            playServicesAnalytics:"com.google.android.gms:play-servvices-analytics:$playservicesVersion",
            playServicesAppIndexing:"com.google.android.gms:play-services-appindexing:$playservicesVersion",
            playServicesAppInvite:"com.google.android.gms:play-services-appinvite:$playservicesVersion",
            playServicesAppState:"com.google.android.gms:play-services-appstate:$playservicesVersion",
            playServicesAuth:"com.google.android.gms:play-services-auth:$playservicesVersion",
            playServicesBase:"com.google.android.gms:play-services-base:$playservicesVersion",
            playServicesBasement:"com.google.android.gms:play-services-basement:$playservicesVersion",
            playServicesCast:"com.google.android.gms:play-services-cast:$playservicesVersion",
            playServicesDrive:"com.google.android.gms:play-services-drive:$playservicesVersion",
            playServicesFitness:"com.google.android.gms:play-services-fitness:$playservicesVersion",
            playServicesGames:"com.google.android.gms:play-services-games:$playservicesVersion",
            playServicesGCM:"com.google.android.gms:play-services-gcm:$playservicesVersion",
            playServiesIdentity:"com.google.android.gms:play-services-identity:$playservicesVersion",
            playServicesLocation:"com.google.android.gms:play-services-location:$playservicesVersion",
            playServicesMaps:"com.google.android.gms:play-services-maps:$playservicesVersion",
            playServicesMeasurement:"com.google.android.gms:play-services-measurement:$playservicesVersion",
            playServicesNearby:"com.google.android.gms:play-services-nearby:$playservicesVersion",
            playServicesPanorama:"com.google.android.gms:play-services-panorama:$playservicesVersion",
            playServicesPlus:"com.google.android.gms:play-services-plus:$playservicesVersion",
            playServicesSafetynet:"com.google.android.gms:play-services-safetynet:$playservicesVersion",
            playServiccesVision:"com.google.android.gms:play-services-vision:$playservicesVersion",
            playServicesWallet:"com.google.android.gms:play-services-wallet:$playservicesVersion",
            playServicesWearable:"com.google.android.gms:play-services-wearable:$playservicesVersion",
            supportWearable:"com.google.android.support:wearable:$supportwearableVersion",
            wearable:"com.google.android.wearable:wearable:$wearableVerion"
    ]

    //third party libs
    androidtransformerVersion = '1.2'
    coordinatorVersion = '1.1.5'
    gwsandroiduuidVersion = '1.0.0.1'
    gwscoloursVersion = '1.0.0.1'
    gwseasingVersion = '1.0.0.1'
    gwseulaVersion = '1.0.0.1'
    gwsindiainkVersion = '1.0.0.1'
    gwsrevealVersion = '1.0.0.1'
    gwsrippledecoviewVersion = '1.0.0.1'
    gwsspannableVersion = '1.0.0.1'
    gwssystemuiVersion = '1.0.0.1'
    gwszdepthshadowVersion = '1.0.0.1'
    telescopeVersion = '1.5.0'
    wizardVersion = '1.1.1'

    thirdPartyDependencies = [
            //compile
            androidtransformer: "com.mobandme:android-transformer:$androidtransformerVersion",
            //apt
            androidtransformerCompiler:"com.mobandme:android-transformer-compiler:$androidtransformerVersion",
            //compile
            coordinator:"me.panavtec:coordinator:$coordinatorVersion",
            //apt
            coordinatorCompiler:"me.panavtec:coordinator-compiler:$coordinatorVersion",
            gwsandroiduuid:"com.github.shareme:GWSAndroidUUID:$gwsandroiduuidVersion@aar",
            gwscolours:"com.github.shareme:GWSColours:$gwscoloursVersion@aar",
            gwseasing:"com.github.shareme:GWSEasing:$gwseasingVersion@aar",
            gwseula:"com.github.shareme:GWSEula:$gwseulaVersion@aar",
            gwsindiaink:"com.github.shareme:GWSIndiaInk:$gwsindiainkVersion@aar",
            gwsreveal:"com.github.shareme:GWSReveal:$gwsrevealVersion@aar",
            gwsrippledecoview:"com.github.shareme:GWSRippleDecoView:$gwsrippledecoviewVersion@aar",
            gwsspannable:"com.github.shareme:GWSSpannable:$gwsspannableVersion@aar",
            gwssystemui:"com.github.shareme:GWSSystemUI:$gwssystemuiVersion@aar",
            gwszdepthshadow:"com.github.shareme:GWSZDepthShadow:$gwszdepthshadowVersion@aar",
            telescope:"com.mattpreciious.telescope:telescope:$telescopeVersion@aar",
            wizard:"me.panavtec:wizard:$wizardVersion"
    ]

    //retrofit deps
    retrofitVersion = '2.0.0-beta2'

    retrofitDeps = [
            retrofit:"com.squareup.retrofit:retrofit:$retrofitVersion",
            retrofitmock:"com.squareup.retrofit:retrofit-mock:$retrofitVersion",
            retrofitgson:"com.squareup.retrofit:converter-gson:$retrofitVersion",

    ]



}